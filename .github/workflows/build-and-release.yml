name: Build and Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release (e.g., 1.0.0)"
        required: true
        default: "1.0.0"

jobs:
  build-and-release:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Get version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            # Extract version from tag (remove 'v' prefix)
            VERSION=${GITHUB_REF#refs/tags/v}
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          fi

      - name: Build app
        run: |
          cd timetracker
          xcodebuild -project timetracker.xcodeproj \
            -scheme timetracker \
            -configuration Release \
            -derivedDataPath ./build \
            build \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO \
            DEVELOPMENT_TEAM="" \
            PROVISIONING_PROFILE_SPECIFIER=""

      - name: Create DMG
        run: |
          cd timetracker
          # Install create-dmg
          brew install create-dmg

          # Create DMG
          create-dmg \
            --volname "Pulse" \
            --window-pos 200 120 \
            --window-size 600 300 \
            --icon-size 100 \
            --icon "pulse.app" 175 120 \
            --hide-extension "pulse.app" \
            --app-drop-link 425 120 \
            --no-internet-enable \
            "../pulse-${{ steps.version.outputs.version }}.dmg" \
            "./build/Build/Products/Release/pulse.app"

      - name: Calculate SHA256
        id: sha256
        run: |
          SHA256=$(shasum -a 256 "pulse-${{ steps.version.outputs.version }}.dmg" | cut -d' ' -f1)
          echo "sha256=$SHA256" >> $GITHUB_OUTPUT
          echo "SHA256: $SHA256"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: Pulse v${{ steps.version.outputs.version }}
          body: |
            ## Pulse v${{ steps.version.outputs.version }}

            A privacy-first macOS time tracking application with enhanced features for manual time entry and webhook notifications.

            ### Installation

            **Important**: This app is not signed with an Apple Developer certificate, so macOS will show security warnings.

            1. Download the DMG file below
            2. Mount the DMG and drag Pulse to your Applications folder
            3. **Right-click** the app in Applications and select "Open" (first time only)
            4. Click "Open" when macOS asks for confirmation
            5. The app will now open normally on subsequent launches

            **Note**: If you see "App can't be opened because it is from an unidentified developer", right-click the app and select "Open" instead of double-clicking.

            ### Features

            - **Menu Bar Integration**: Lives quietly in your menu bar
            - **Auto-Start**: Optionally launch the app automatically when you log in to your Mac
            - **Client/Project Tracking**: Organize your work by clients and projects
            - **100% Local Operation**: All data stored locally on your Mac
            - **Manual Time Entry**: Add and edit time entries after the fact
            - **Webhook Notifications**: Optional outbound notifications
            - **Privacy-First**: No cloud sync, no telemetry, complete data control

            ### System Requirements

            - macOS 15.5 or later

            ### SHA256

            ```
            ${{ steps.sha256.outputs.sha256 }}
            ```
          files: |
            pulse-${{ steps.version.outputs.version }}.dmg
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
